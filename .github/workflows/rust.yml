on: [push]

name: Build Release Artifacts

jobs:
  # build-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Build
  #       run: echo ${{ github.sha }} > Release.txt
  #     - name: Test
  #       run: cat Release.txt
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: Release.txt

  # x64_build:
  #   name: Build x64 Rust Binaries
  #   runs-on: ubuntu-18.04
  #   if: startsWith(github.ref, 'refs/tags/')
  #   env:
  #     SQLX_OFFLINE: "true"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #     - run: >-
  #       sudo apt-get install
  #       lld
  #       libbsd-dev
  #       protobuf-compiler
  #       zip
  #       unzip
  #     - name: x64 Build
  #       uses: actions-rs/cargo@v1
  #       # if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         command: build
  #         # args: --release
  #     - run: >-
  #       cd ./target/debug && zip teg-x64.zip
  #       teg-invite
  #       teg-marlin
  #       teg-server
  #       teg-health-monitor
  #     - name: x64 Release
  #       uses: softprops/action-gh-release@v1
  #       # if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           ./target/debug/teg-x64.zip
  #         # cp ./snapcraft/webrtc-server

  arm_v7_build:
    name: Build ARMv7 Rust Binaries
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')
    env:
      SQLX_OFFLINE: "true"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          target: armv7-unknown-linux-gnueabihf
      - name: apt-get
        run: >
          sudo apt-get install
          lld
          libbsd-dev
          protobuf-compiler
          zip
          unzip
          binutils-arm-linux-gnueabihf
          gcc-arm-linux-gnueabihf
          g++-arm-linux-gnueabihf
      - name: ARMv7 Build
        uses: actions-rs/cargo@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          command: build
          args: --release --target=armv7-unknown-linux-gnueabihf
      - name: zip
        run: >
          cd ./target/armv7-unknown-linux-gnueabihf/release && zip teg-armv7.zip
          teg-invite
          teg-marlin
          teg-server
          teg-health-monitor
      - name: ARMv7 Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./target/armv7-unknown-linux-gnueabihf/release/teg-armv7
          # cp ./snapcraft/webrtc-server
